module simple_sync_ram #(
    parameter DATA_WIDTH = 8, // Width of data (8 bits)
    parameter ADDR_WIDTH = 4 // Address width (4 bits => 16 locations)
)(
    input wire clk, // Clock signal
    input wire we, // Write enable
    input wire [ADDR_WIDTH-1:0] addr,// Address
    input wire [DATA_WIDTH-1:0] din, // Data input (write)
    output reg [DATA_WIDTH-1:0] dout // Data output (read)
);

    // Memory declaration: 2^ADDR_WIDTH words of DATA_WIDTH bits
    reg [DATA_WIDTH-1:0] mem [0:(1<<ADDR_WIDTH)-1];

    // Synchronous read and write operations
    always @(posedge clk) begin
        if (we)
            mem[addr] <= din; // Write operation
        dout <= mem[addr]; // Read operation (synchronous)
    end

endmodule
